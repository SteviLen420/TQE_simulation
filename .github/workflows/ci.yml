# File: .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Least-privilege token for the workflow
permissions:
  contents: read

# Cancel older runs of the same branch if a new push arrives
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'  # cache pip downloads between runs for faster builds

      # (Optional) OS packages needed if you want to compile healpy in CI
      # - name: Install system deps for healpy
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y build-essential gfortran python3-dev

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # Fallback minimal set if no requirements.txt is present
            pip install numpy pandas matplotlib scikit-learn
          fi
          # Optional extras (uncomment only if you really need them in CI):
          # pip install healpy scipy shap lime qutip

      # (Optional) Enable once your code is lint-clean
      # - name: Lint (flake8)
      #   run: |
      #     pip install flake8
      #     flake8 .

      - name: Smoke test
        run: |
          python - <<'PY'
          import sys, platform
          print("CI smoke test OK")
          print("Python:", sys.version.split()[0], "| Platform:", platform.platform())
          PY

      # (Optional) Demo profile dry-run: wire up your real entry-point later if desired
      # - name: Demo profile dry-run
      #   env:
      #     TQE_PROFILE: demo
      #   run: |
      #     python -c "print('Running profile:', 'demo')"
