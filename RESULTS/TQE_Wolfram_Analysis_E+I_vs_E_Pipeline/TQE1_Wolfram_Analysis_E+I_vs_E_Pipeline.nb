(* SPDX-License-Identifier: MIT *)
(* Author: Stefan Len, 2025 *)

(* ====================================== *)
(* 1) SET DIRECTORIES                     *)
(* ====================================== *)

dirA = "./dataset_A_E+I";
dirB = "./dataset_B_E_only";

(* ====================================== *)
(* 2) HELPER FUNCTIONS                    *)
(* ====================================== *)

ClearAll[safeImport, toDS, colExistsQ, niceName];

safeImport[f_] := Quiet @ Check[
   Import[f, "Dataset"],
   Dataset[{}]
];

toDS[x_] := Which[
   Head[x] === Dataset, x,
   ListQ[x] && Length[x] > 0, Dataset[x],
   True, Dataset[{}]
];

colExistsQ[ds_, name_] := 
  MatchQ[ds, _Dataset] && Length[ds] > 0 && 
   Quiet@Check[KeyExistsQ[Normal@First@ds, name], False];

niceName[path_] := StringReplace[FileBaseName[path],
   {"_E+I" -> "", "_E-Only" -> "", "_E_only" -> "", "_EOnly" -> ""}];

(* ====================================== *)
(* 3) LOAD FILES                          *)
(* ====================================== *)

filesA = FileNames["*.csv", dirA, Infinity];
filesB = FileNames["*.csv", dirB, Infinity];

assocA = AssociationMap[safeImport, filesA];
assocB = AssociationMap[safeImport, filesB];

(* ====================================== *)
(* 4) GROUP BY BASE NAMES                 *)
(* ====================================== *)

groupsA = GroupBy[filesA, niceName];
groupsB = GroupBy[filesB, niceName];
commonGroups = Intersection[Keys[groupsA], Keys[groupsB]];

(* ====================================== *)
(* 5) COMPARE EACH GROUP                  *)
(* ====================================== *)

mergeFiles[fileList_] := Module[{all},
  all = DeleteMissing[toDS /@ (Import /@ fileList)];
  If[all === {}, Dataset[{}], Dataset @ Flatten[Normal /@ all, 1]]
];

groupResults = Association@Table[
    g -> Module[{dsA, dsB, commonCols, stats},
      dsA = mergeFiles[groupsA[g]];
      dsB = mergeFiles[groupsB[g]];
      If[dsA === Dataset[{}] || dsB === Dataset[{}], Return[g -> <||>]];
      commonCols = Intersection[Keys@First@Normal@dsA, Keys@First@Normal@dsB];
      stats = Association@Table[
        col -> <|
          "mean_E+I" -> Mean@DeleteMissing[Normal@dsA[All, col]],
          "mean_E-only" -> Mean@DeleteMissing[Normal@dsB[All, col]],
          "diff" -> (Mean@DeleteMissing[Normal@dsA[All, col]] -
                     Mean@DeleteMissing[Normal@dsB[All, col]])
        |>,
        {col, commonCols}
      ];
      stats
    ],
    {g, commonGroups}
];

(* ====================================== *)
(* 6) GLOBAL AVERAGE ACROSS EVERYTHING    *)
(* ====================================== *)

allStats = Flatten[
   Table[
     KeyValueMap[
       Function[{col, vals},
         {col, vals["mean_E+I"], vals["mean_E-only"]}
       ],
       groupResults[g]
     ],
     {g, commonGroups}
   ],
   1
];

(* rendezzük oszloponként és átlagoljuk *)
globalAvg = Association @ 
   KeyValueMap[
     Function[{col, rows},
       col -> <|
         "mean_E+I" -> Mean@DeleteMissing[rows[[All, 2]]],
         "mean_E-only" -> Mean@DeleteMissing[rows[[All, 3]]],
         "diff" -> (Mean@DeleteMissing[rows[[All, 2]]] - 
                    Mean@DeleteMissing[rows[[All, 3]]])
       |>
     ],
     GroupBy[allStats, First -> Rest]
   ];

(* ====================================== *)
(* 7) SAVE RESULTS                        *)
(* ====================================== *)

CleanForJSON[x_] := x /. Missing[_] -> Null;

nbDir   = Quiet@NotebookDirectory[];
baseDir = If[StringQ[nbDir], nbDir, FileNameJoin[{$HomeDirectory, "Desktop"}]];
outDir  = FileNameJoin[{baseDir, "TQE_Wolfram_Global_Comparison"}];
If[!DirectoryQ[outDir], CreateDirectory[outDir, CreateIntermediateDirectories -> True]];

(* Save group results *)
Export[FileNameJoin[{outDir, "grouped_comparisons.json"}], CleanForJSON@groupResults];
Export[FileNameJoin[{outDir, "grouped_comparisons.csv"}],
  Prepend[
    Flatten[
      KeyValueMap[
        Function[{group, vals},
          KeyValueMap[{group, #1, #2["mean_E+I"], #2["mean_E-only"], #2["diff"]} &, vals]
        ] /@ Normal[groupResults],
      1
    ],
    {"Group","Column","Mean_E+I","Mean_E-only","Difference"}
  ]
];

(* Save global average *)
Export[FileNameJoin[{outDir, "global_avg_comparison.json"}], CleanForJSON@globalAvg];
Export[FileNameJoin[{outDir, "global_avg_comparison.csv"}],
  Prepend[
    KeyValueMap[{#1, #2["mean_E+I"], #2["mean_E-only"], #2["diff"]} &, globalAvg],
    {"Column","Mean_E+I","Mean_E-only","Difference"}
  ]
];

Print["Results exported to: ", outDir];
