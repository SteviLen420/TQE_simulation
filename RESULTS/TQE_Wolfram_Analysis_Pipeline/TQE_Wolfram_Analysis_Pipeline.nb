(* SPDX-License-Identifier: MIT *)
(* Copyright (c) 2025 Stefan Len *)

(* ================================================================== *)
(*  Simple mathematical check for all CSV files in a simulation run   *)
(*  Author: Stefan Len                                                *)
(* ================================================================== *)

ClearAll["Global`*"];

(* Safe import of CSV as Dataset, empty if error *)
safeImport[f_] := Quiet @ Check[Import[f, "Dataset"], Dataset[{}]];

(* Safe stddev: 0 if fewer than 2 elements *)
safeStdDev[list_] := If[Length[list] >= 2, StandardDeviation[list], 0];

(* Sanitize results for JSON export *)
sanitizeForJSON[expr_] := expr /. {
   Missing[_] -> Null,
   Times -> Null, Power -> Null,
   _Symbol?(!NumericQ[#] &) :> Null
};

(* Analyze one CSV file column by column *)
analyzeCSV[file_String] := Module[{ds, cols, summary},
  
  ds = safeImport[file];
  
  If[Length[ds] == 0, 
    Return[<|"File" -> FileBaseName[file], "Status" -> "Empty"|>]
  ];
  
  cols = Keys[Normal@First[ds]]; (* get column names *)
  
  summary = Association@Table[
    col -> Module[{vals = DeleteMissing@Cases[Normal[ds[All, col]], _?NumericQ]},
      If[Length[vals] == 0,
        <|"Mean" -> Null, "StdDev" -> Null|>,
        <|"Mean" -> Mean[vals], "StdDev" -> safeStdDev[vals]|>
      ]
    ],
    {col, cols}
  ];
  
  <|
    "File" -> FileBaseName[file],
    "TotalRows" -> Length[ds],
    "AnyNaN" -> AnyTrue[Flatten[Normal[ds]], Not@*NumberQ],
    "AnyInfinity" -> AnyTrue[Flatten[Normal[ds]], # === Infinity || # === -Infinity &],
    "Columns" -> summary
  |>
];

(* ================================================================== *)
(*  Main execution: scan all CSVs in the chosen simulation directory  *)
(* ================================================================== *)

(* Path to your simulation folder with CSV files *)
simDir = "/Users/stevilen/Desktop/TQE_EI_SIMULATION_COLAB_GPU/TQE_Universe_Simulation_full_Pipeline_EI_20250918_081329/CSV";

files = FileNames["*.csv", simDir];
Print["ðŸ“‚ Found CSV files: ", Length[files]];

results = analyzeCSV /@ files;

(* Show results as a nice table *)
Dataset[results]

(* ================================================================== *)
(*  Export results to Desktop (both CSV + JSON)                       *)
(* ================================================================== *)

timestamp = DateString[{"Year","Month","Day","Hour","Minute","Second"}];
outDir = FileNameJoin[{$HomeDirectory, "Desktop", "TQE_Math_Check_" <> timestamp}];
If[!DirectoryQ[outDir], CreateDirectory[outDir, CreateIntermediateDirectories -> True]];

Export[FileNameJoin[{outDir, "math_check_results.csv"}], results];
Export[FileNameJoin[{outDir, "math_check_results.json"}],
  sanitizeForJSON[results]
];

Print["âœ… Math check finished, results saved to: ", outDir];
